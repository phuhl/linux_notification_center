* Linux Notification Center

A haskell-written notification center for users that like a desktop with style...

** Features

The notification center receives notifications via DBUS (like any
notification daemon) and shows them in the upper right corner of the
screen. The notification (if not specified in the notification
otherwise) will also be shown in the notification center even after
the notification disappeared by itself. The notifications can be
clicked to make them disappear.

Notifications can be replaced by the use of the =replaces-id= feature
of the notification specification.

The notification center can (optionally) show user-specified buttons
in the bottom that can be in two states (highlighted/not highlighted)
and that can run customable shell commands.

_NEW:_ Notifications can contain markup and links. The notification
center can display custom buttons in notifications.

** Screenshots

Some applications, notification:
[[file:README.org.img/org_20181125_131724_ZI9o09.jpg]]

Notification Center opened:
[[file:README.org.img/org_20181203_164608_WqFdmO.jpg]]

Link, Markup and Action support:
[[file:README.org.img/more_notifications.png]]

** Usage

To start it:
#+BEGIN_SRC sh
> deadd-notification-center
#+END_SRC


Toggle between hidden and shown state of the notification center:
#+BEGIN_SRC sh
kill -s USR1 $(pidof deadd-notification-center)
#+END_SRC


Set the state of a user defined button (in this example the first
button, which has =id= 0):
#+BEGIN_SRC sh
# turn highlighting on
notify-send.py a --hint boolean:deadd-notification-center:true int:id:0 boolean:state:true

# turn highlighting off
notify-send.py a --hint boolean:deadd-notification-center:true int:id:0 boolean:state:false
#+END_SRC
This snippet uses [[https://github.com/phuhl/notify-send.py][notify-send.py]], an improved version of libnotify
(notify-send).

** Install

Install from the AUR for Arch: [[https://aur.archlinux.org/packages/deadd-notification-center/][deadd-notification-center]]. Currently
there exists an issue and a fix with building, as described [[https://github.com/phuhl/linux_notification_center/issues/4][here]]. 

*OR* 

If you want to spare yourself the hassle to apply the fix and the
build time there es an /all new/ binary package available:
[[https://aur.archlinux.org/packages/deadd-notification-center-bin/][deadd-notification-center-bin]].

*OR*

Dependencies:
- [[https://www.archlinux.org/packages/community/x86_64/stack/][stack]]
- cairo
- pango
- gobject-introspection
- gtk3

#+BEGIN_SRC shell-script
make
sudo make install
#+END_SRC

** Configuration

No configuration is necessary, the notification center comes with
sensible defaultsâ„¢.

Nearly all colors and many sizes are customizable, as well well as the
default timeout for notifications and the optional buttons in the
notification center. Below are possible configurable options shown.
The configuration file must be located at
=~/.config/deadd/deadd.conf=.

#+BEGIN_EXAMPLE
[notification-center]
marginTop = 0
width = 500
monitor = 0
# optional command to run at startup (e.g. to setup button states)
startupCommand = "deadd-notification-center-startup"
newFirst = true
# If true, the transient field in notifications will be ignored and the
# notification will be persisted in the notifiction center anyways
ignoreTransient = false
# If true, markup (<u>, <i>, <b>, <a>) will be displayed properly
useMarkup = true
configSendNotiClosedDbusMessage = false

# See section "Notification based scripting" for an explenation
match = "title=Abc;body=abc":"app=notify-send"
modify = "transient=false"
run = "":"killall notify-send"

[notification-center-notification-popup]
notiDefaultTimeout = 10000
distanceTop = 50
distanceRight = 50
distanceBetween = 20
width = 300
monitor = 0

[colors]
background = rgba(29, 27, 20, 0.6)
notiBackground = rgba(9, 0, 0, 0.5)
notiColor = #fef3f6
critical = rgba(255, 0, 50, 0.5)
criticalColor = #FFF
criticalInCenter = rgba(155, 0, 20, 0.5)
criticalInCenterColor = #FFF
buttonColor = #eae2e0
buttonHover = rgba(0, 20, 20, 0.2)
buttonHoverColor = #fee
buttonBackground = transparent
labelColor = #eae2e0

[buttons]
buttonsPerRow = 5
buttonHeight = 60
buttonMargin = 2
labels = "VPN":"Bluetooth":"Wifi":"Screensaver"
commands = "sudo vpnToggle":"bluetoothToggle":"wifiToggle":"screensaverToggle"
buttonColor = #fee
buttonBackground = rgba(255, 255, 255, 0.15)
buttonHover = rgba(0, 20, 20, 0.2)
buttonHoverColor = #fee
buttonTextSize = 12px;

buttonState1 = rgba(255,255,255,0.5)
buttonState1Color = #fff
buttonState1Hover = rgba(0, 20, 20, 0.4)
buttonState1HoverColor = #fee
buttonState2 = rgba(255,255,255,0.3)
buttonState2Color = #fff
buttonState2Hover = rgba(0, 20, 20, 0.3)
buttonState2HoverColor = #fee
#+END_EXAMPLE

*** More styling

In the file =.config/gtk-3.0/gtk.css= you can add styles that will
effect the notification center.

The following class-names for labels are defined:
- Notifications:
  - =label.deadd-noti-center.notification.appname=
  - =label.deadd-noti-center.notification.body=
  - =label.deadd-noti-center.notification.title=
- Notifications in the notification center:
  - =label.deadd-noti-center.in-center.appname=
  - =label.deadd-noti-center.in-center.body=
  - =label.deadd-noti-center.in-center.title=
  - =label.deadd-noti-center.in-center.time=
- Notification-center:
  - =label.deadd-noti-center.noti-center.time=
  - =label.deadd-noti-center.noti-center.date=

_Examples:_

#+CAPTION: Remove appname from notifications
#+BEGIN_SRC css
label.deadd-noti-center.notification.appname,
label.deadd-noti-center.in-center.appname {
    opacity: 0
}
#+END_SRC


#+CAPTION: Change font
#+BEGIN_SRC css
.deadd-noti-center {
    font-family: monospace;
}
#+END_SRC

*** Notification-based scripting

You can modify notifications if they match certain criteria. 

_Matching:_

The criteria you can specify are equality for the following parameters:
- title
- body
- app
- time
- icon

You can test a parameter like this: =title=Abc=.
If you want to test for more than one parameter (for all of them to be
true) you can concatenate the criteria with =;= like this:
=title=Abc;body=You can baz yourself=.

_Modifying:_

You can set the following parameters:
- title
- body
- app
- time
- icon (does not do anything, currently)
- transient (value has to be =true= or =false=)
- noClosedMsg (value has to be =true= or =false=, if set to true it
  will prevent that a DBUS =NotificationClosed= message will be send
  for this notification. Only applies if the configuration parameter
  =configSendNotiClosedDbusMessage= is set to =true=)

If you want to set more than one parameter you can concatenate them
with =;= like this: =app=Crashmaster 2000;time=4:20=.

_Running Commands:_

Not implemented, yet.

#+BEGIN_EXAMPLE
[notification-center]
match = "title=Abc;body=abc":"app=notify-send"
modify = "transient=false"
run = "":"killall notify-send"
#+END_EXAMPLE

** Issues and goals

See here: [[file:Worklog.org][Log of issues]]

** Contribute

First of all: Contribution is obviously 100% optional.

If you do want to contribute, feel free to send me an email (for the
address, see on my profile).

If you do not want to contribute with your time, you can buy me a beer
;). Someone mentioned, she would be willing to donate, so here is my
PayPal link: [[https://paypal.me/phuhl]]. Should you consider to donate,
please be aware that this does not buy you the right to demand
anything. This is a hobby. And will be. But if you just want to give
me some motivation by showing me that someone appreciates my work,
feel free to do so.

** See also

Also take a look at my [[https://github.com/phuhl/notify-send.py][notify-send.py]] which imitates notify-send (libnotify) but also is able to replace notifications.

